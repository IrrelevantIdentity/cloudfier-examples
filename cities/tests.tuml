package cities_tests;

import cities::State;
import cities;

[Test]
class Tests

    operation stateByAbbreviation();
    begin
        TestData#build();
        Assert#isNull(State#byAbbreviation("ZZ"));
        Assert#isNotNull(State#byAbbreviation("OR"));
    end;

    operation cityByName();
    begin
        var california;
        TestData#build();
        california := State#byAbbreviation("CA");
        Assert#isNull(california.city("FooBar"));
        Assert#isNotNull(california.city("San Francisco"));
    end;

    operation statePopulation();
    begin
        var oregon, portland, eugene;
        TestData#build();
        oregon := State#byAbbreviation("OR");
        portland := oregon.city("Portland");
        eugene := oregon.city("Eugene");
        Assert#areEqual(portland.population + eugene.population, oregon.population);
    end;

    operation populousStates();
    begin
        var populousStateAbbreviations;
        TestData#build();
        populousStateAbbreviations := State#abbreviationsOfStatesMorePopulousThan(500000);
        Assert#areEqual(2, populousStateAbbreviations.size());
        Assert#isTrue(populousStateAbbreviations.includes("CA"));
        Assert#isTrue(populousStateAbbreviations.includes("OR"));
        Assert#isTrue(! populousStateAbbreviations.includes("WY"));
    end;
end;

class TestData

    static operation build();
    begin
        var california, oregon, wyoming;
        
        california := TestData#newState("California", "CA");
        TestData#newCity("San Francisco", 837442, california);
        TestData#newCity("San Mateo", 101128, california);
        TestData#newCity("San Diego", 1356000, california);
        
        oregon := TestData#newState("Oregon", "OR");
        TestData#newCity("Portland", 609456, oregon);
        TestData#newCity("Eugene", 159190, oregon);
        
        wyoming := TestData#newState("Wyoming", "WY");
        TestData#newCity("Cheyenne", 62448, wyoming);
    end;

    static operation newCity(name : String, population : Integer, cityState : State) : City;
    begin
        var city;
        city := new City;
        city.name := name;
        city.population := population;
        city.cityState := cityState;
        return city;
    end;

    static operation newState(name : String, abbreviation : String) : State;
    begin
        var newState;
        newState := new State;
        newState.name := name;
        newState.abbreviation := abbreviation;
        return newState;
    end;
end;

end.