package expenses_tests;

import expenses;

[Test]
class Tests

    static operation declare(amount : Double) : Expense;
    begin
        var emp : Employee, cat : Category, expense : Expense;
        emp := Employee extent.\any((e : Employee) : Boolean { true });
        cat := Category extent.\any((e : Category) : Boolean { true });
        return emp.declareExpense("just a test expense", 10.0, Date#today(), cat);
    end;

    operation declaredExpenseRemainsInDraft();
    begin
        var expense : Expense;
        expense := Tests#declare(10.0);
        Assert#areEqual(Expense::Status#Draft, expense.status);
    end;

    operation submitExpenseUnder50IsAutomaticallyApproved();
    begin
        var expense : Expense;
        begin
            expense := Tests#declare(10.0);
        end;
        begin
            expense.submit();
        end;
        begin
        	Assert#areEqual(Expense::Status#Approved, expense.status);
        end;
    end;
    
    operation submitExpense50AndOverNeedsApproval();
    begin
        var expense : Expense;
        expense := Tests#declare(100.0);
        expense.submit();
        Assert#areEqual(Expense::Status#Submitted, expense.status);
    end;
end;

end.