/*
 * See Advanced Examples in the documentation for more information:
 *
 * http://alphasimple.com/blog/documentation/advanced-examples/
 */
package expenses;

(* An employee reports expenses. *) 
class Employee 
    attribute name : String;
    attribute expenses : Expense[*];
    
    derived attribute approvedExpenses : Expense[*] := () : Expense[*] { 
        return self.expensesByStatus(ExpenseStatus#Approved)
    };    
    
    derived attribute recordedExpenses : Expense[*] := () : Expense[*] {
        return self.expensesByStatus(ExpenseStatus#Recorded)
    };
    
    derived attribute submittedExpenses : Expense[*] := () : Expense[*] {
        return self.expensesByStatus(ExpenseStatus#Submitted)
    };
    
    derived attribute totalSubmitted : Double := () : Double { return self.totalExpenses(self.submittedExpenses) };
    
    derived attribute totalRecorded : Double := () : Double { return self.totalExpenses(self.recordedExpenses) };
    
    operation declareExpense(description : String, amount : Double, date : Date, category : Category) : Expense;
    begin
        var newExpense:Expense;
        newExpense := Expense#newExpense(description,amount,date,category);
        link EmployeeExpenses(employee := self, expenses := newExpense);
        return newExpense;
    end;
    
    private operation totalExpenses(toSum : Expense[*]) : Double;
    begin
        return (toSum.reduce((e : Expense, sum : Double) : Double {
            return sum + e.amount 
        }, 0) as Double);
    end;
    
    private operation expensesByStatus(status : ExpenseStatus) : Expense[*] {ordered,unique};
    begin
        return self->expenses.select((e : Expense) : Boolean { return e.status = status} )
    end;
end;

composition EmployeeExpenses
    role Employee.expenses;
    role Expense.employee;
end;

end.     